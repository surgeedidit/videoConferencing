tags:
  - name: Rooms
    description: Room management endpoints

components:
  schemas:
    Room:
      type: object
      properties:
        _id:
          type: string
          description: The auto-generated ID of the room
        title:
          type: string
          description: Room title
        description:
          type: string
          description: Room description
        tag:
          type: string
          description: Room tag or category
        roomBanner:
          type: string
          description: URL to room banner image
        participants:
          type: array
          items:
            type: string
          description: List of participant IDs
        hostId:
          type: string
          description: ID of the room host
        isPrivate:
          type: boolean
          default: false
          description: Whether the room is private
        startTime:
          type: string
          format: date-time
          description: Room start time
        durationInSeconds:
          type: integer
          minimum: 60
          maximum: 28800
          description: Duration in seconds
        endTime:
          type: string
          format: date-time
          description: Room end time
        roomCode:
          type: string
          description: Unique code for joining the room
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp

    CreateRoomRequest:
      type: object
      required:
        - title
        - description
        - tag
        - startTime
        - durationInSeconds
      properties:
        title:
          type: string
          example: "Team Meeting"
        description:
          type: string
          example: "Weekly team sync meeting"
        tag:
          type: string
          example: "business"
        roomBanner:
          type: string
          example: ""
        startTime:
          type: string
          format: date-time
          example: "2024-01-15T10:00:00Z"
        durationInSeconds:
          type: integer
          example: 3600
        isPrivate:
          type: boolean
          example: false

    AddParticipantRequest:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          example: "507f1f77bcf86cd799439012"

    RemoveParticipantRequest:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          example: "507f1f77bcf86cd799439012"

    JoinRoomRequest:
      type: object
      required:
        - roomCode
      properties:
        roomCode:
          type: string
          example: "ABC123"

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
        error:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /rooms/create:
    post:
      summary: Create a new room
      tags: [Rooms]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoomRequest'
      responses:
        201:
          description: Room created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Room'
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /rooms:
    get:
      summary: Get all rooms with optional filtering
      tags: [Rooms]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: tag
          schema:
            type: string
          description: Filter by room tag
        - in: query
          name: isPrivate
          schema:
            type: boolean
          description: Filter by privacy status
      responses:
        200:
          description: List of all rooms retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Room'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /rooms/host:
    get:
      summary: Get rooms created by current host
      tags: [Rooms]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Host's rooms retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Room'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /rooms/{id}:
    get:
      summary: Get a room by ID
      tags: [Rooms]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Room ID
      responses:
        200:
          description: Room details retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Room'
        404:
          description: Room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /rooms/{id}/participants:
    post:
      summary: Add participant to room
      tags: [Rooms]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Room ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddParticipantRequest'
      responses:
        200:
          description: Participant added successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Room'
        404:
          description: Room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Remove participant from room
      tags: [Rooms]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Room ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveParticipantRequest'
      responses:
        200:
          description: Participant removed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Room'
        404:
          description: Room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /rooms/join:
    post:
      summary: Join a room using room code
      tags: [Rooms]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinRoomRequest'
      responses:
        200:
          description: Successfully joined room
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          room:
                            $ref: '#/components/schemas/Room'
                          participant:
                            type: object
        400:
          description: User already active in this room or room has ended
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Room not found with this code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /rooms/code/{code}:
    get:
      summary: Get room details by code (Public)
      tags: [Rooms]
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
          description: Room code
      responses:
        200:
          description: Room details retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Room'
        404:
          description: Room not found with this code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'